apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --out kompose.yaml
      kompose.version: 1.9.0 (093c756)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb
    name: mongodb
  spec:
    ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
    selector:
      io.kompose.service: mongodb
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --out kompose.yaml
      kompose.version: 1.9.0 (093c756)
    creationTimestamp: null
    labels:
      io.kompose.service: style-service
    name: style-service
  spec:
    ports:
    - name: "8084"
      port: 8084
      targetPort: 8084
    selector:
      io.kompose.service: style-service
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --out kompose.yaml
      kompose.version: 1.9.0 (093c756)
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb
    name: mongodb
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: mongodb
      spec:
        containers:
        - args:
          - mongod
          - --smallfiles
          - --logpath=/dev/null
          env:
          - name: MONGO_DATA_DIR
            value: /data/db
          - name: MONGO_LOG_DIR
            value: /dev/null
          image: mongo:latest
          name: mongodb
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongodb-claim0
        restartPolicy: Always
        volumes:
        - name: mongodb-claim0
          persistentVolumeClaim:
            claimName: mongodb-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongodb-claim0
    name: mongodb-claim0
    annotations:
        volume.beta.kubernetes.io/storage-class: mongodb-storage
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
    storageClassName: mongodb-storage
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --out kompose.yaml
      kompose.version: 1.9.0 (093c756)
    creationTimestamp: null
    labels:
      io.kompose.service: style-service
    name: style-service
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: style-service
      spec:
        containers:
        - env:
          - name: SPRING_DATA_MONGODB_URI
            value: mongodb://mongodb/solsticedb
          image: keunlee48105/style-service-image:v1
          name: style-service
          ports:
          - containerPort: 8084
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

